{"is_source_file": true, "format": "Python", "description": "This file defines the API routes related to note management in a FastAPI application. It includes endpoints for creating, listing, retrieving, updating, and deleting notes, with role-based access control, pagination, and audit logging. The routes are organized using FastAPI's APIRouter, and the code interacts with database models, schemas, and security functions.", "external_files": ["../db", "../models", "../schemas", "../security", "../audit"], "external_methods": ["get_session", "Note", "NoteCreate", "NoteUpdate", "NoteOut", "PaginatedNotes", "get_current_user", "require_role", "user_can_access_note", "write_audit_entry"], "published": ["router"], "classes": [{"name": "APIRouter", "description": "FastAPI's router class used to define a group of related endpoints."}], "methods": [{"name": "create_note( payload: NoteCreate, session: Session = Depends(get_session), user: UserContext = Depends(get_current_user), )", "description": "Endpoint to create a new note, logs creation activity.", "scope": "", "scopeKind": ""}, {"name": "list_notes( limit: int = Query(default=10, ge=1, le=100), offset: int = Query(default=0, ge=0), session: Session = Depends(get_session), user: UserContext = Depends(get_current_user), )", "description": "Endpoint to list notes with pagination, filtering by user roles.", "scope": "", "scopeKind": ""}, {"name": "get_note( note_id: int, session: Session = Depends(get_session), user: UserContext = Depends(get_current_user), )", "description": "Retrieve a specific note, access-controlled.", "scope": "", "scopeKind": ""}, {"name": "update_note( note_id: int, payload: NoteUpdate, session: Session = Depends(get_session), user: UserContext = Depends(get_current_user), )", "description": "Update existing note details with audit logging.", "scope": "", "scopeKind": ""}, {"name": "delete_note( note_id: int, reason: Optional[str] = Query(default=None, description=\"Reason for deletion\"), session: Session = Depends(get_session), user: UserContext = Depends(get_current_user), )", "description": "Delete a note, with audit logging including before state.", "scope": "", "scopeKind": ""}], "calls": ["get_session()", "get_current_user()", "require_role(user, [...])", "user_can_access_note(user, owner_id)", "write_audit_entry(session, user, action, entity, entity_id, before_state, after_state, reason)"], "search-terms": ["FastAPI notes endpoints", "notes CRUD with audit logging", "notes role-based access", "notes pagination", "APIRouter notes"], "state": 2, "file_id": 11, "knowledge_revision": 23, "git_revision": "", "ctags": [{"_type": "tag", "name": "_dt", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-210339-210330/notes_backend/src/api/routers_notes.py", "pattern": "/^    from datetime import datetime as _dt$/", "file": true, "language": "Python", "kind": "unknown", "scope": "update_note", "scopeKind": "function", "nameref": "unknown:datetime"}, {"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-210339-210330/notes_backend/src/api/routers_notes.py", "pattern": "/^def create_note($/", "language": "Python", "kind": "function", "signature": "( payload: NoteCreate, session: Session = Depends(get_session), user: UserContext = Depends(get_current_user), )"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-210339-210330/notes_backend/src/api/routers_notes.py", "pattern": "/^def delete_note($/", "language": "Python", "kind": "function", "signature": "( note_id: int, reason: Optional[str] = Query(default=None, description=\"Reason for deletion\"), session: Session = Depends(get_session), user: UserContext = Depends(get_current_user), )"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-210339-210330/notes_backend/src/api/routers_notes.py", "pattern": "/^def get_note($/", "language": "Python", "kind": "function", "signature": "( note_id: int, session: Session = Depends(get_session), user: UserContext = Depends(get_current_user), )"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-210339-210330/notes_backend/src/api/routers_notes.py", "pattern": "/^def list_notes($/", "language": "Python", "kind": "function", "signature": "( limit: int = Query(default=10, ge=1, le=100), offset: int = Query(default=0, ge=0), session: Session = Depends(get_session), user: UserContext = Depends(get_current_user), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-210339-210330/notes_backend/src/api/routers_notes.py", "pattern": "/^router = APIRouter($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-210339-210330/notes_backend/src/api/routers_notes.py", "pattern": "/^def update_note($/", "language": "Python", "kind": "function", "signature": "( note_id: int, payload: NoteUpdate, session: Session = Depends(get_session), user: UserContext = Depends(get_current_user), )"}], "hash": "39b57140936f6ac8ad18326b99fff635", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/routers_notes.py", "fields": [{"name": "router = APIRouter(", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"23": ""}]}