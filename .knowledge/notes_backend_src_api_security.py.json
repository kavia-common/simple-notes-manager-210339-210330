{"is_source_file": true, "format": "Python", "description": "This file implements security-related functionalities for role-based access control (RBAC) within a FastAPI application, including user context extraction from headers, role enforcement, and access permission checks.", "external_files": ["fastapi", "pydantic"], "external_methods": ["fastapi.Header", "fastapi.HTTPException", "fastapi.status"], "published": ["get_current_user", "require_role", "user_can_access_note"], "classes": [{"name": "UserContext", "description": "Represents the current request's user context with optional user ID and role."}], "methods": [{"name": "UserContext get_current_user( x_user_id: Optional[str] = Header(default=None, alias=\"X-User-Id\"), x_user_role: Optional[str] = Header(default=\"user\", alias=\"X-User-Role\"), )", "description": "Asynchronously retrieves the current user's context from HTTP headers, defaulting to a 'user' role if not specified.", "scope": "", "scopeKind": ""}, {"name": "None require_role(user: UserContext, allowed: list[str])", "description": "Enforces that the current user has one of the allowed roles; raises HTTP 403 Forbidden if not.", "scope": "", "scopeKind": ""}, {"name": "bool user_can_access_note(user: UserContext, owner_id: Optional[str])", "description": "Determines if the user is authorized to access a particular note, based on user role and ownership.", "scope": "", "scopeKind": ""}], "calls": ["Header", "HTTPException", "status.HTTP_403_FORBIDDEN"], "search-terms": ["RBAC", "security", "FastAPI header user context", "role enforcement", "access control"], "state": 2, "file_id": 8, "knowledge_revision": 17, "git_revision": "", "ctags": [{"_type": "tag", "name": "UserContext", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-210339-210330/notes_backend/src/api/security.py", "pattern": "/^class UserContext(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-210339-210330/notes_backend/src/api/security.py", "pattern": "/^async def get_current_user($/", "language": "Python", "typeref": "typename:UserContext", "kind": "function", "signature": "( x_user_id: Optional[str] = Header(default=None, alias=\"X-User-Id\"), x_user_role: Optional[str] = Header(default=\"user\", alias=\"X-User-Role\"), )"}, {"_type": "tag", "name": "require_role", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-210339-210330/notes_backend/src/api/security.py", "pattern": "/^def require_role(user: UserContext, allowed: list[str]) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(user: UserContext, allowed: list[str])"}, {"_type": "tag", "name": "role", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-210339-210330/notes_backend/src/api/security.py", "pattern": "/^    role: Literal[\"admin\", \"user\"] = \"user\"$/", "language": "Python", "typeref": "typename:Literal[\"admin\", \"user\"]", "kind": "variable", "scope": "UserContext", "scopeKind": "class"}, {"_type": "tag", "name": "user_can_access_note", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-210339-210330/notes_backend/src/api/security.py", "pattern": "/^def user_can_access_note(user: UserContext, owner_id: Optional[str]) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(user: UserContext, owner_id: Optional[str])"}, {"_type": "tag", "name": "user_id", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-210339-210330/notes_backend/src/api/security.py", "pattern": "/^    user_id: Optional[str] = None$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "UserContext", "scopeKind": "class"}], "hash": "cfea6d2e14f21516bda21bb366ae9d18", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/security.py", "fields": [{"name": "Literal[\"admin\", \"user\"] role", "scope": "UserContext", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] user_id", "scope": "UserContext", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"17": ""}]}